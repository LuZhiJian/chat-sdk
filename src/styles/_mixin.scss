@charset 'utf-8';

.ellipsis {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

// 清楚浮动
@mixin clearfix {
  zoom: 1;

  &:after {
    display: block;
    height: 0;
    clear: both;
    content: "";
    visibility: hidden;
  }
}

@mixin abs-center {
  position: absolute;
  left:0;
  right:0;
  top: 0;
  bottom: 0;
  margin: auto;
}

@mixin clamp($n) {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: $n;
  -webkit-box-orient: vertical;
}

// 圆角
@mixin radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  border-radius: $radius;
}

// 盒子阴影
@mixin shadow($x, $y, $blur, $color) {
  -webkit-box-shadow: $x $y $blur $color;
  -moz-box-shadow: $x $y $blur $color;
  box-shadow: $x $y $blur $color;
}

@mixin no-select {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

//文字溢出
@mixin text-overflow {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin appearance($s) {
  -webkit-appearance: $s;
  -moz-appearance: $s;
  appearance: $s;
}

// 透明度
@mixin opacity($opacity) {
  opacity: $opacity / 100;
  filter: alpha(opacity=$opacity);
}

// 动画时间
@mixin transition($time) {
  -webkit-transition: $time;
  -moz-transition: $time;
  transition: $time;
}

//旋转
@mixin rotate($deg) {
  -webkit-transform: rotate($deg);
  -moz-transform: rotate($deg);
  transform: rotate($deg);
}

//旋转
@mixin scale($var) {
  -webkit-transform: scale($var);
  transform: scale($var);
}

@mixin scrollbar($display, $width, $radius, $bg, $color) {
  ::-webkit-scrollbar
  {
    width: $width;
    background-color: $bg;
    display: $display;
  }

  /*定义滚动条轨道 内阴影+圆角*/
  ::-webkit-scrollbar-track
  {
    // -webkit-box-shadow: inset 0 0 $width $color;
    border-radius: $radius;
    background-color: $bg;
  }

  /*定义滑块 内阴影+圆角*/
  ::-webkit-scrollbar-thumb
  {
    border-radius: $radius;
    // -webkit-box-shadow: inset 0 0 $width $color;
    background-color: $color;
  }
}

// placeholder
@mixin placeholder-color($color) {

  input::-webkit-input-placeholder,
  textarea::-webkit-input-placeholder {
    color: $color;
  }

  input:-moz-placeholder,
  textarea:-moz-placeholder {
    color: $color;
  }

  input::-moz-placeholder,
  textarea::-moz-placeholder {
    color: $color;
  }

  input:-ms-input-placeholder,
  textarea:-ms-input-placeholder {
    color: $color;
  }
}

@mixin bg($url) {
  background: url($url) no-repeat;
  background-size: cover;
  background-position: center center;
}

@mixin av-style($size, $url) {
  width: $size;
  height: $size;
  border-radius: 4px;
  background-position: center center;
  background-size: cover;
  background-repeat: no-repeat;
  @if $url {
    background-image: url($url);
  }
}

//渐变
@mixin linear-gradient($toward, $startColor, $endColor) {
  background: -webkit-linear-gradient($toward, $startColor, $endColor);
  background: linear-gradient($toward, $startColor, $endColor);
}

// 动画animation Mixins
// --------------------------------------------------

@mixin animation($animation) {
  animation: $animation;
  -webkit-animation: $animation;
}

@mixin animation-duration($duration) {
  animation-duration: $duration;
  -webkit-animation-duration: $duration;
}

@mixin animation-direction($direction) {
  animation-direction: $direction;
  -webkit-animation-direction: $direction;
}

@mixin animation-timing-function($animation-timing) {
  -webkit-animation-timing-function: $animation-timing;
  animation-timing-function: $animation-timing;
}

@mixin animation-fill-mode($fill-mode) {
  -webkit-animation-fill-mode: $fill-mode;
  animation-fill-mode: $fill-mode;
}

@mixin animation-name($name...) {
  -webkit-animation-name: $name;
  animation-name: $name;
}

@mixin animation-iteration-count($count) {
  -webkit-iteration-count: $count;
  animation-iteration-count: $count;
}

@mixin animation-fill-mode($mode) {
  -webkit-animation-fill-mode: $mode;
  animation-fill-mode: $mode;
}

/*
 * $duration 规定完成动画所花费的时间 (3s)
 * $timing 规定动画的速度曲线 (linear, ease, ease-in, ease-out, ease-in-out, cubic-bezier(n, n, n, n) n = 0~1)
 * $count 定义动画的播放次数 (n, infinite 无限次)
 * $mode 规定动画在播放之前或之后，其动画效果是否可见 (none | forwards | backwards | both)
 */
@mixin animation($name, $duration, $timing, $count, $mode) {
  @include animation-name($name);
  @include animation-duration($duration);
  @include animation-timing-function($timing);
  @include animation-iteration-count($count);
  @include animation-fill-mode($mode);
}

// 上下浮动动画
@keyframes upToDown {
  0% {
    transform: translate(0px, 0px);
    opacity: 1;
  }

  50% {
    transform: translate(0px, -10px);
    opacity: .6;
  }

  100% {
    transform: translate(0px, 0px);
    opacity: 1;
  }
}

// 上下浮动动画
@-webkit-keyframes upToDown {
  0% {
    -webkit-transform: translate(0px, 0px);
    opacity: 1;
  }

  50% {
    -webkit-transform: translate(0px, -10px);
    opacity: .6;
  }

  100% {
    -webkit-transform: translate(0px, 0px);
    opacity: 1;
  }
}

// 呼吸效果动画
@keyframes brees {
  0% {
    @include scale(.95)
  }

  50% {
    @include scale(1)
  }

  100% {
    @include scale(.95)
  }
}

// 呼吸效果动画
@-webkit-keyframes brees {
  0% {
    @include scale(.8)
  }

  50% {
    @include scale(1)
  }

  100% {
    @include scale(.8)
  }
}

@keyframes xuanzhuan {
  0%{transform:rotate(0deg);}
  25%{transform:rotate(90deg);}
  50%{transform:rotate(180deg);}
  75%{transform:rotate(270deg);}
  100%{transform:rotate(360deg);}
}

@-webkit-keyframes xuanzhuan {
  0%{-webkit-transform:rotate(0deg);}
  25%{-webkit-transform:rotate(90deg);}
  50%{-webkit-transform:rotate(180deg);}
  75%{-webkit-transform:rotate(270deg);}
  100%{-webkit-transform:rotate(360deg);}
}

// 呼吸效果动画
@keyframes at {
  0% {
    background-color: #eecff2;
  }

  50% {
    background-color: #f7c4f4;
  }

  100% {
    background-color: #F5F5F5;
  }
}

// 呼吸效果动画
@-webkit-keyframes at {
  0% {
    background-color: #eecff2;
  }

  50% {
    background-color: #f7c4f4;
  }

  100% {
    background-color: #F5F5F5;
  }
}
